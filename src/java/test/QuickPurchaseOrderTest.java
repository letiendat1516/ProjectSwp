package test;

import dao.PurchaseOrderDAO;
import java.math.BigDecimal;
import java.sql.Date; // ‚úÖ Import java.sql.Date thay v√¨ java.util.Date

/**
 * Test nhanh cho vi·ªác c·∫≠p nh·∫≠t b√°o gi√°
 */
public class QuickPurchaseOrderTest {
    
    public static void main(String[] args) {
        System.out.println("üß™ QUICK TEST - Purchase Order Update");
        
        PurchaseOrderDAO dao = new PurchaseOrderDAO();
        
        String testPurchaseOrderId = "NK1-042";
        
        System.out.println("Testing with Purchase Order ID: " + testPurchaseOrderId);
        
        // Test 1: C·∫≠p nh·∫≠t th√¥ng tin c∆° b·∫£n
        System.out.println("\n--- Test 1: Update Basic Info ---");
        
        // ‚úÖ T·∫°o java.sql.Date thay v√¨ java.util.Date
        Date quoteDate = new Date(System.currentTimeMillis());
        
        boolean test1 = dao.updatePurchaseOrderInfo(
            testPurchaseOrderId,
            quoteDate, // S·ª≠ d·ª•ng java.sql.Date
            "C√¥ng ty Test ABC",
            "123 Test Street, Test City",
            "0901234567",
            "test@company.com",
            "ƒê√¢y l√† t·ªïng k·∫øt b√°o gi√° test cho ƒë∆°n NK1-042"
        );
        System.out.println("Result: " + (test1 ? "‚úÖ SUCCESS" : "‚ùå FAILED"));
        
        // Test 2: C·∫≠p nh·∫≠t m·ªôt item
        System.out.println("\n--- Test 2: Update Item Price ---");
        boolean test2 = dao.updatePurchaseOrderItem(
            testPurchaseOrderId,
            "m01",
            new BigDecimal("25000"), // Gi√° 25,000 VND
            new BigDecimal("250000"), // T·ªïng 250,000 VND
            "Ghi ch√∫ test cho s·∫£n ph·∫©m m01"
        );
        System.out.println("Result: " + (test2 ? "‚úÖ SUCCESS" : "‚ùå FAILED"));
        
        // Test 3: C·∫≠p nh·∫≠t status
        System.out.println("\n--- Test 3: Update Status ---");
        boolean test3 = dao.updatePurchaseOrderStatus(testPurchaseOrderId, "quoted");
        System.out.println("Result: " + (test3 ? "‚úÖ SUCCESS" : "‚ùå FAILED"));
        
        // Test 4: Verify - l·∫•y l·∫°i d·ªØ li·ªáu ƒë·ªÉ ki·ªÉm tra
        System.out.println("\n--- Test 4: Verify Results ---");
        var result = dao.getPurchaseOrderById(testPurchaseOrderId);
        if (result != null) {
            System.out.println("‚úÖ Found Purchase Order NK1-042:");
            System.out.println("   Status: " + result.getStatus());
            System.out.println("   Supplier: " + result.getSupplier());
            System.out.println("   Phone: " + result.getPhone());
            System.out.println("   Email: " + result.getEmail());
            System.out.println("   Summary: " + result.getSummary());
            System.out.println("   Quote Date: " + result.getDayQuote());
            System.out.println("   Items count: " + (result.getPurchaseItems() != null ? result.getPurchaseItems().size() : 0));
            
            if (result.getPurchaseItems() != null) {
                result.getPurchaseItems().forEach(item -> {
                    System.out.println("   Item: " + item.getProductCode() + 
                                     " - Name: " + item.getProductName() +
                                     " - Price: " + item.getPricePerUnit() + 
                                     " - Total: " + item.getTotalPrice() +
                                     " - Note: " + item.getNote());
                });
            }
        } else {
            System.out.println("‚ùå Purchase Order NK1-042 not found!");
        }
        
        System.out.println("\nüèÅ Quick test completed for NK1-042!");
    }
}
